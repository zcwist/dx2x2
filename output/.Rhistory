x = c(1,1,1,2)
unique(x)
y = c(2,3,3,3)
unique(c(x,y))
runApp()
runApp()
runApp()
runApp()
runApp()
x = read.csv("x_1.csv")
x
x <- c(read.csv("x_1.csv"),read.csv("x_2.csv"))
x[1]
x
x <- c(read.csv("x_1.csv"))
x
x[1] <- read.csv("x_1.csv")
x = c()
x[1] <- read.csv("x_1.csv")
x <- c(read.csv("x_1.csv"))
x <- c(read.csv("x_1.csv"),read.csv("x_2.csv"))
x[0]
x[0][0]
typeof(x)
x[[0]]
x[0]
x[25]
x[2]
x[70]
x <- data.frame(read.csv("x_1.csv"),read.csv("x_2.csv"))
runApp()
runApp()
x1 <- read.csv("x_1.csv")
colnames(x1)
runApp()
runApp()
runApp()
surveyID = c(1,2)
for (id in surveyID){
file = read.csv(paste("x_",toString(id),".csv",sep=""))
studentList = c(file[1],x[id])
}
studentList
for (id in surveyID){
file = read.csv(paste("x_",toString(id),".csv",sep=""))
studentList = c(file$Name,x[id])
}
studentList
for (id in surveyID){
file = read.csv(paste("x_",toString(id),".csv",sep=""))
studentList = c(studentList,file$Name)
}
studentList
file = read.csv("x_1.csv")
file
file$Name
c(file$Name,file$Name)
a = file$Name
c(a,file$Name)
runApp()
library(plotly)
install.packages(plotly)
install.packages("plotly")
install.packages("plotly")
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = ~carat, y = ~price, color = ~carat,
size = ~carat, text = ~paste("Clarity: ", clarity))
shiny::runApp()
paste("c",1)
paste("c",1,sep="")
source("filter.R")
filter(1,1,1)
datafilter(1,1,1)
View(filter)
source("filter.R")
datafilter(1,1,1)
datafilter(1,1,1)
datafilter <- function(surveyID, skills, students){
xcsv = read.csv(paste("x_",surveyID,".csv",sep=""))
ycsv = read.csv(paste("y_",surveyID,".csv",sep=""))
print(xcsv)
}
datafilter(1,1,1)
datafilter <- function(surveyID, skills, students){
xcsv = read.csv(paste("x_",surveyID,".csv",sep=""))
ycsv = read.csv(paste("y_",surveyID,".csv",sep=""))
plot_ly(x=xcsv[[2]],y=ycsv[[2]])
}
datafilter(1,1,1)
datafilter <- function(surveyID, skills, students){
xcsv = read.csv(paste("x_",surveyID,".csv",sep=""))
ycsv = read.csv(paste("y_",surveyID,".csv",sep=""))
plot_ly(x=xcsv[[2]],y=ycsv[[2]],color=ycsv[[1]])
}
datafilter(1,1,1)
datafilter <- function(surveyID, skills, students){
xcsv = read.csv(paste("x_",surveyID,".csv",sep=""))
ycsv = read.csv(paste("y_",surveyID,".csv",sep=""))
plot_ly(x=xcsv[[2]],y=ycsv[[2]],color=ycsv[[0]])
}
datafilter(1,1,1)
datafilter <- function(surveyID, skills, students){
xcsv = read.csv(paste("x_",surveyID,".csv",sep=""))
ycsv = read.csv(paste("y_",surveyID,".csv",sep=""))
plot_ly(x=xcsv[[2]],y=ycsv[[2]],color=ycsv[[0]])
}
datafilter(1,1,1)
file = read.csv("x_1.csv")
file[0]
file[[0]]
file
datafilter <- function(surveyID, skills, students){
xcsv = read.csv(paste("x_",surveyID,".csv",sep=""))
ycsv = read.csv(paste("y_",surveyID,".csv",sep=""))
plot_ly(x=xcsv[[2]],y=ycsv[[2]],color=xcsv$Name)
}
datafilter(1,1,1)
file
file[[0]]
file[0]
file[1]
datafilter <- function(surveyID, skills, students){
xcsv = read.csv(paste("x_",surveyID,".csv",sep=""))
ycsv = read.csv(paste("y_",surveyID,".csv",sep=""))
plot_ly(x=xcsv[[2]],y=ycsv[[2]],color=xcsv[1])
}
datafilter(1,1,1)
plot_ly(x=xcsv[[2]],y=ycsv[[2]],color=xcsv[[1]])
xcsv
datafilter <- function(surveyID, skills, students){
xcsv = read.csv(paste("x_",surveyID,".csv",sep=""))
ycsv = read.csv(paste("y_",surveyID,".csv",sep=""))
plot_ly(x=xcsv[[2]],y=ycsv[[2]],color=xcsv[[1]])
}
datafilter(1,1,1)
help(plot_ly)
datafilter <- function(surveyID, skills, students){
csv = read.csv(paste("x_"),surveyID,".csv",sep="")
plot_ly(x=csv$x,y=csv$y,color=csv$skill)
}
datafilter(1,1,1)
datafilter <- function(surveyID, skills, students){
csv = read.csv(paste("s_"),surveyID,".csv",sep="")
plot_ly(x=csv$x,y=csv$y,color=csv$skill)
}
datafilter(1,1,1)
datafilter <- function(surveyID, skills, students){
csv = read.csv(paste("s_",surveyID,".csv",sep=""))
plot_ly(x=csv$x,y=csv$y,color=csv$skill)
}
datafilter(1,1,1)
datafilter <- function(surveyID, skills, students){
csv = read.csv(paste("s_",surveyID,".csv",sep=""))
plot_ly(x=csv$x,y=csv$y,color=csv$uid)
}
datafilter(1,1,1)
skill
datafilter <- function(surveyID, skills, students){
csv = read.csv(paste("s_",surveyID,".csv",sep=""))
plot_ly(x=csv$x,y=csv$y,color=csv$skill)
}
datafilter(1,1,1)
datafilter <- function(surveyID, skills, students){
csv = read.csv(paste("s_",surveyID,".csv",sep=""))
plot_ly(x=csv$x,y=csv$y,color=csv$skill)
}
datafilter(1,1,1)
datafilter <- function(surveyID, skills, students){
csv = read.csv(paste("s_",surveyID,".csv",sep=""))
csv = filter(csv, uid=="1032940")
plot_ly(x=csv$x,y=csv$y,color=csv$skill)
}
datafilter(1,1,1)
datafilter <- function(surveyID, skills, students){
csv = read.csv(paste("s_",surveyID,".csv",sep=""))
filteredcsv = filter(csv, uid=="1032940")
plot_ly(x=filteredcsv$x,y=filteredcsv$y,color=filteredcsv$skill)
}
datafilter(1,1,1)
plot_ly(x=filteredcsv$x,y=filteredcsv$y,color=csv$skill)
datafilter <- function(surveyID, skills, students){
csv = read.csv(paste("s_",surveyID,".csv",sep=""),header=TRUE)
filteredcsv = filter(csv, uid=="1032940")
plot_ly(x=filteredcsv$x,y=filteredcsv$y,color=csv$skill)
}
datafilter(1,1,1)
datafilter <- function(surveyID, skills, students){
csv = read.csv(file=paste("s_",surveyID,".csv",sep=""),header=TRUE)
filteredcsv = filter(csv, uid=="1032940")
plot_ly(x=filteredcsv$x,y=filteredcsv$y,color=csv$skill)
}
datafilter(1,1,1)
surveyID<-1;
csv = read.csv(file=paste("s_",surveyID,".csv",sep=""),header=TRUE)
csv
filter(csv,uid=="1032940")
typeof(csv)
filter(csv)
datafilter <- function(surveyID, skills, students){
csv = read.csv(file=paste("s_",surveyID,".csv",sep=""),header=TRUE)
filteredcsv = subset(csv, uid=="1032940")
plot_ly(x=filteredcsv$x,y=filteredcsv$y,color=csv$skill)
}
datafilter(1,1,1)
filteredcsv = subset(csv, uid=="1032940")
filteredcsv
plot_ly(x=filteredcsv$x,y=filteredcsv$y,color=csv$skill)
datafilter <- function(surveyID, skills, students){
csv = read.csv(file=paste("s_",surveyID,".csv",sep=""),header=TRUE)
filteredcsv = subset(csv, uid=="1032940")
plot_ly(x=filteredcsv$x,y=filteredcsv$y,color=filteredcsv$skill)
}
datafilter(1,1,1)
runApp()
runApp()
datafilter <- function(surveyID, skill, student){
csv = read.csv(file=paste("s_",surveyID,".csv",sep=""),header=TRUE)
filteredcsv = csv
if (skills != "ALL"){
filteredcsv = subset(filteredcsv, skill==skill)
}
if (student != "All Students"){
filteredcsv = subset(filteredcsv, student==student)
}
filteredcsv = subset(csv, uid=="1032940")
plot_ly(x=filteredcsv$x,y=filteredcsv$y,color=filteredcsv$skill)
}
datafilter(1,"Clarifying","All Students")
datafilter <- function(surveyID, skill, student){
csv = read.csv(file=paste("s_",surveyID,".csv",sep=""),header=TRUE)
filteredcsv = csv
if (skills != "ALL"){
filteredcsv = subset(filteredcsv, skill==skill)
}
if (student != "All Students"){
filteredcsv = subset(filteredcsv, student==student)
}
plot_ly(x=filteredcsv$x,y=filteredcsv$y,color=filteredcsv$skill)
}
datafilter(1,"Clarifying","All Students")
datafilter <- function(surveyID, skill, student){
csv = read.csv(file=paste("s_",surveyID,".csv",sep=""),header=TRUE)
filteredcsv = csv
if (skills != "ALL"){
filteredcsv = subset(filteredcsv, skill==skill)
}
if (student != "All Students"){
filteredcsv = subset(filteredcsv, student==student)
}
print(filteredcsv)
plot_ly(x=filteredcsv$x,y=filteredcsv$y,color=filteredcsv$skill)
}
datafilter(1,"Clarifying","All Students")
datafilter <- function(surveyID, skill, student){
csv = read.csv(file=paste("s_",surveyID,".csv",sep=""),header=TRUE)
filteredcsv = csv
if (skills != "ALL"){
filteredcsv = subset(filteredcsv, skill==skill)
}
if (student != "All Students"){
filteredcsv = subset(filteredcsv, student==student)
}
print(filteredcsv)
plot_ly(x=filteredcsv$x,y=filteredcsv$y,color=filteredcsv$skill)
}
datafilter(1,"Clarifying","1032940")
datafilter <- function(surveyID, skill, student){
csv = read.csv(file=paste("s_",surveyID,".csv",sep=""),header=TRUE)
filteredcsv = csv
if (skill != "ALL"){
filteredcsv = subset(filteredcsv, skill==skill)
}
if (student != "All Students"){
filteredcsv = subset(filteredcsv, uid==student)
}
print(filteredcsv)
plot_ly(x=filteredcsv$x,y=filteredcsv$y,color=filteredcsv$skill)
}
datafilter(1,"Clarifying","1032940")
datafilter <- function(surveyID, skill, student){
csv = read.csv(file=paste("s_",surveyID,".csv",sep=""),header=TRUE)
filteredcsv = csv
if (skill != "ALL"){
filteredcsv = subset(filteredcsv, skill==skill)
}
if (student != "All Students"){
filteredcsv = subset(filteredcsv, uid==student)
}
print(filteredcsv)
plot_ly(x=filteredcsv$x,y=filteredcsv$y,color=filteredcsv$skill)
}
datafilter(1,"Clarifying","1032940")
datafilter <- function(surveyID, skillname, studentuid){
csv = read.csv(file=paste("s_",surveyID,".csv",sep=""),header=TRUE)
filteredcsv = csv
if (skillname != "ALL"){
filteredcsv = subset(filteredcsv, skill==skillname)
}
if (studentuid != "All Students"){
filteredcsv = subset(filteredcsv, uid==studentuid)
}
print(filteredcsv)
plot_ly(x=filteredcsv$x,y=filteredcsv$y,color=filteredcsv$skill)
}
datafilter(1,"Clarifying","1032940")
runApp()
runApp()
source("filter.R")
filteredcsv = datafilter(1,"ALL","All Students")
plot_ly(x=filteredcsv$x,y=filteredcsv$y,color=filteredcsv$skill)
runApp()
runApp()
runApp()
runApp()
runApp()
template <- read.csv("template.csv")
template <- read.csv("template.csv",header=header,sep=",")
template <- read.csv("template.csv",header=TRUE,sep=",")
template <- read.csv("template.csv",header=TRUE,sep=",",quote="")
runApp()
template <- read.csv("template.csv",header=F,sep=",",quote="")
skills <- colnames(template)[2:length(colnames(template))]
skills
template <- read.csv("template.csv",head=T,sep=",",quote="")
skills <- colnames(template)[2:length(colnames(template))]
skills
template
template <- read.csv("template.csv",head=T,sep=",",quote="",check.names=FALSE)
template
runApp()
help(plot_ly)
runApp()
runApp()
csv = read.csv("s_1.csv")
csv
plot_ly(x=csv$x,type="histogram")
plot_ly(x=csv$y,type="histogram")
plot_ly(x=csv$x,type="histogram")
p <- plot_ly(alpha=0.6) %>%
add_histogram(x=csv$x) %>%
add_histogram(x=csv$y) %>%
layout(barmod="overlay")
p
runApp()
help("add_histogram")
help("layout")
help("layout")
csv
plot_ly(csv,type="hisogram2d",x=~x,y=~y)
plot_ly(csv,type="histogram2d",x=~x,y=~y)
plot_ly(csv,type="histogram2dcontour",x=~x,y=~y)
runApp()
plot_ly(csv,type="histogram2dcontour",x=~x,y=~y,colors = "Blues")
runApp()
runApp()
runApp()
csv$uid
paste(csv$uid)
runApp()
csv
l.1 <- list(list(c(10,20), NULL),list(c(10,20,30), NULL), list(c(9,12,13), NULL))
names(l.1) <- c("a","b","c")
l.1
csv
csv2 <- read.csv("s_2.csv")
csv2
names(csv)
paste(csv$uid,csv$skill)
A<-list(a=1,b=2,c=3)
B<-list(a=4,e=5,f=6)
tapply(unlist(c(A,B),use.names=F),names(c(A,B)),c)
unlist(c(A,B)
)
unlist(c(A,B),use.names=F)
names(c(A,B))
sapply(unique(c(names(A), names(B))), function(x) list(c(A[[x]], B[[x]])))
help("sapply")
merge(csv,csv2)
rbind(csv,csv2)
add = rbind(csv,csv2)
merge(csv,csv2,by="uid")
m = merge(csv,csv2,by="uid")
View(m)
m = merge(csv,csv2,by="uid+skill")
m = merge(csv,csv2,by=paste(uid,skill))
csv = read.csv("s_1 copy.csv")
csv2 = read.csv("s_2 copy.csv")
csv
csv2
m = merge(csv,csv2,by=uid
)
m = merge(csv,csv2,by="uid")
help(merge)
m = merge(csv,csv2,by=c("uid","skill"))
source("filter.R")
compare(1,2,1,1)
runApp()
df <- data.frame(
x = c(1,2,1),
y = c(1,2,1),
f = c(1,2,3)
)
p <- df %>%
plot_ly(
x = ~x,
y = ~y,
frame = ~f,
type = 'scatter',
mode = 'markers',
showlegend = F
)
)
df <- data.frame(
x = c(1,2,1),
y = c(1,2,1),
f = c(1,2,3)
)
p <- df %>%
plot_ly(
x = ~x,
y = ~y,
frame = ~f,
type = 'scatter',
mode = 'markers',
showlegend = F
)
p
library(gapminder)
runApp()
install.packages("gapminder")
gapminder
view(gapminder)
library("gapminder")
gapminder
p <- gapminder %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
size = ~pop,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) %>%
layout(
xaxis = list(
type = "log"
)
)
p
view(gapminder)
View(csv2)
View(gapminder)
csv
typeof(csv)
cbind(csv,NewColumn="abc")
csv
csv = cbind(csv,survey_id=1)
csv2 = cbind(csv2,survey_id=2)
filteredcsv = merge(csv,csv2,by=c("uid","skill"))
filteredcsv
c(csv,csv2)
paste(csv,csv2)
merge(csv,csv2)
rbind(csv,csv2)
m = rbind(csv,csv2)
m
plot_ly(data=m, x=~x,y=~y,frame=~survey_id)
plot_ly(data=m, x=~x,y=~y,frame=~survey_id, color = ~skill)
runApp()
print filteredcsv
runApp()
runApp()
surveyID <-1
survey2ID <-2
csv = read.csv(file=paste("s_",surveyID,".csv",sep=""),header=TRUE)
csv = cbind(csv,survey_id=surveyID)
csv2 = read.csv(file=paste("s_",survey2ID,".csv",sep=""),header=TRUE)
csv2 = cbind(csv,survey_id=survey2ID)
csv
csv2
csv = read.csv(file=paste("s_",surveyID,".csv",sep=""),header=TRUE)
csv = cbind(csv,survey_id=surveyID)
csv2 = read.csv(file=paste("s_",survey2ID,".csv",sep=""),header=TRUE)
csv2 = cbind(csv2,survey_id=survey2ID)
csv
csv2
runApp()
filteredcsv = merge(csv,csv2,by=c("uid","skill"))
filteredcsv
csv = read.csv(file=paste("s_",surveyID,".csv",sep=""),header=TRUE)
csv2 = read.csv(file=paste("s_",survey2ID,".csv",sep=""),header=TRUE)
filteredcsv = merge(csv,csv2,by=c("uid","skill"))
filteredcsv
filteredcsv$x.y-filteredcsv$x.x
runApp()
csv = read.csv(file=paste("s_",surveyID,".csv",sep=""),header=TRUE)
csv2 = read.csv(file=paste("s_",survey2ID,".csv",sep=""),header=TRUE)
filteredcsv = merge(csv,csv2,by=c("uid","skill"))
filteredcsv
runApp()
help("add_histogram")
runApp()
help("layout")
runApp()
clear
cls
runApp()
